<?xml version="1.0"?>
<launch>
  <!-- Launch file for loading the tracebot mockup into gazebo. Making use of the UR launch file
  as a template for the nescesarry things to include. -->

  <!--Parameter Declarations-->
  <arg name="mount_base_width" default="0.55"/>
  <arg name="mount_base_length" default="0.55"/>
  <arg name="mount_base_height" default="1.27"/>

  <arg name="arm_mount_offset_x" default="0.1293"/>
  <arg name="arm_mount_offset_y" default="0.0"/>
  <arg name="arm_mount_offset_z" default="0.0707"/>
  <arg name="arm_mount_offset_theta" default="0.0"/>
  <arg name="arm_base_tilt" default="0.785398"/>

  <arg name="left_arm_model" default="ur5e"/>
  <arg name="right_arm_model" default="ur5e"/>

  <arg name="camera_mount_offset_z" default="0.65169"/>
  <arg name="camera_tilt" default="0.785398"/>

  <arg name="rviz" default="false"/>

  <!--Add arguments to robot description-->
  <param name="robot_description" command="$(find xacro)/xacro '$(find tracebot_mockup_gazebo)/urdf/tracebot_mockup.urdf.xacro'
    mount_base_width:=$(arg mount_base_width)
    mount_base_length:=$(arg mount_base_length)
    mount_base_height:=$(arg mount_base_height)
    arm_mount_offset_x:=$(arg arm_mount_offset_x)
    arm_mount_offset_y:=$(arg arm_mount_offset_y)
    arm_mount_offset_z:=$(arg arm_mount_offset_z)
    arm_mount_offset_theta:=$(arg arm_mount_offset_theta)
    arm_base_tilt:=$(arg arm_base_tilt)
    left_arm_model:=$(arg left_arm_model)
    right_arm_model:=$(arg right_arm_model)
    camera_mount_offset_z:=$(arg camera_mount_offset_z)
    camera_tilt:=$(arg camera_tilt)"
  />

  <!-- Controller configuration -->
  <arg name="controller_config_file" default="$(find tracebot_mockup_gazebo)/config/tracebot_mockup_controllers.yaml" doc="Config file used for defining the ROS-Control controllers."/>
  <arg name="controllers" default="joint_state_controller pos_joint_traj_controller" doc="Controllers that are activated by default."/>
  <arg name="stopped_controllers" default="joint_group_pos_controller" doc="Controllers that are initally loaded, but not started."/>

  <!-- robot_state_publisher configuration -->
  <arg name="tf_prefix" default="" doc="tf_prefix used for the robot."/>
  <arg name="tf_pub_rate" default="500" doc="Rate at which robot_state_publisher should publish transforms."/>

  <!-- Gazebo parameters -->
  <arg name="paused" default="false" doc="Starts Gazebo in paused mode" />
  <arg name="gui" default="true" doc="Starts Gazebo gui" />


  <!-- Robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="$(arg tf_pub_rate)" />
    <param name="tf_prefix" value="$(arg tf_prefix)" />
  </node>
  
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
    <rosparam param="source_list">[/joint_states]</rosparam>
  </node>

  <include file="$(find tracebot_mockup_moveit_config)/launch/gazebo.launch" >
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gazebo_gui" value="$(arg gui)"/>
    <arg name="gazebo_world" value="$(find tracebot_mockup_gazebo)/worlds/tracebot_mockup_world.world"/>
  </include>
  
    <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find tracebot_mockup_moveit_config)/launch/move_group.launch">
    <arg name="info" value="true"/>
    <arg name="load_robot_description" value="false"/>
  </include>
  
    <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(find tracebot_mockup_moveit_config)/launch/moveit_rviz.launch">
    <arg name="rviz_config" value="$(find tracebot_mockup_moveit_config)/launch/moveit.rviz"/>
  </include>
</launch>
